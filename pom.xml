<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>app.github.charleech</groupId>    
    <artifactId>payara-evaluation</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>payara-evaluation</name>

    <url>${my.project.url}</url>
   
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <my.project.description>
            This is a project which provide the demonstration for the Payara.
        </my.project.description>
        <my.project.url>https://github.com/charleech/payara-evaluation</my.project.url>
        <my.project.git.url>https://github.com/charleech/payara-evaluation</my.project.git.url>
        
        <my.project.dependency.scope>compile</my.project.dependency.scope>
        <my.project.dependency.provided.scope>provided</my.project.dependency.provided.scope>
        <my.project.dependency.test.scope>test</my.project.dependency.test.scope>
        <my.project.dependency.runtime.scope>runtime</my.project.dependency.runtime.scope>
        <my.project.dependency.import.scope>import</my.project.dependency.import.scope>
        <my.project.dependency.web.scope>compile</my.project.dependency.web.scope>
        
        <my.maven.surefire.jvm.memory>-Xmx512m -XX:MaxPermSize=256m -XX:-UseSplitVerifier</my.maven.surefire.jvm.memory>
        <my.maven.surefire.java.endorsed.dir/>
        
        <my.project.quality.exclude/>
        
        <my.java.version>1.8</my.java.version>

        <my.lombok.version>1.18.12</my.lombok.version>
        <my.spotbugs.version>4.1.1</my.spotbugs.version>  
        <my.slf4j.version>1.7.30</my.slf4j.version>
        <my.logback.version>1.2.3</my.logback.version>
        
        <my.junit.version>4.13.1</my.junit.version>
        <my.mockito.version>3.2.4</my.mockito.version>
        <my.assertj.version>3.14.0</my.assertj.version>
        <my.system.rules.version>1.19.0</my.system.rules.version>
        <my.h2.version>1.4.200</my.h2.version>
        <my.fluent.interface.proxy.version>2.2.0</my.fluent.interface.proxy.version>
        
        <my.jersey.version>2.31</my.jersey.version>
        <my.eclipselink.version>2.7.6</my.eclipselink.version>
        <my.javaee.version>8.0</my.javaee.version>
        <my.microprofile.version>3.3</my.microprofile.version>
        
        <my.arquillian.version>1.7.0.Alpha2</my.arquillian.version>
        <my.shrinkwrap.resolver.version>3.1.4</my.shrinkwrap.resolver.version>
        <my.shrinkwrap.descriptor.version>2.0.0</my.shrinkwrap.descriptor.version>
        <my.ingwar.suite.version>1.2.1</my.ingwar.suite.version>
        <my.commons.lang.old.version>2.6</my.commons.lang.old.version>

        <my.payara.arquillian.version>2.3.1</my.payara.arquillian.version>
        <my.payara.version>5.2020.3</my.payara.version>

        <my.json.unit.version>2.18.1</my.json.unit.version>
        <my.jsonassert.version>0.4.14</my.jsonassert.version>
        <my.restito.version>0.9.3</my.restito.version>
        <my.rest.assured.version>4.1.2</my.rest.assured.version>
        <my.groovy.version>2.4.15</my.groovy.version>
    </properties>

    <description>${my.project.description}</description>

    <inceptionYear>${my.project.inception.year}</inceptionYear>

    <repositories>
        <repository>
            <id>maven-central</id>
            <url>https://repo.maven.apache.org/maven2</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>bintray</id>
            <url>https://jcenter.bintray.com</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>https://github.com/charleech/payara-evaluation/blob/master/LICENSE</url>
            <distribution>repo</distribution>
            <comments>The Payara Evaluation</comments>
        </license>
    </licenses>

    <scm>
        <connection>
            scm:git:${my.project.git.url}
        </connection>
        <developerConnection>
            scm:git:${my.project.git.url}
        </developerConnection>
        <url>${my.project.gitlab.url}</url>
    </scm>
    
    <developers>
        <developer>
            <id>charlee.ch</id>
            <name>Charlee Chitsuk</name>
            <email>charlee.ch@gmail.com</email>
            <url>http://th.gravatar.com/charleech</url>
            <timezone>+7</timezone>
            <properties>
                <picUrl>http://th.gravatar.com/charleech</picUrl>
            </properties>
        </developer>
    </developers>
    
    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**jks/**</exclude>
                    <exclude>**pgp/**</exclude>
                    <exclude>**gpg/**</exclude>
                    <exclude>**file/**</exclude>
                </excludes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**jks/**</include>
                    <include>**pgp/**</include>
                    <include>**gpg/**</include>
                    <include>**file/**</include>
                </includes>
            </testResource>
        </testResources>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${my.lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-annotations</artifactId>
                <version>${my.spotbugs.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${my.slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${my.slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${my.slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${my.slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-ext</artifactId>
                <version>${my.slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${my.logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${my.logback.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.davidmarquis</groupId>
                <artifactId>fluent-interface-proxy</artifactId>
                <version>${my.fluent.interface.proxy.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${my.junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${my.mockito.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${my.assertj.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.stefanbirkner</groupId>
                <artifactId>system-rules</artifactId>
                <version>${my.system.rules.version}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${my.h2.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>${my.jersey.version}</version>
                <type>pom</type>
                <scope>${my.project.dependency.import.scope}</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>eclipselink</artifactId>
                <version>${my.eclipselink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.moxy</artifactId>
                <version>${my.eclipselink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
                <version>${my.eclipselink.version}</version>
            </dependency>
            <dependency>
                <groupId>javax</groupId>
                <artifactId>javaee-api</artifactId>
                <version>${my.javaee.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile</groupId>
                <artifactId>microprofile</artifactId>
                <version>${my.microprofile.version}</version>
                <type>pom</type>
                <scope>${my.project.dependency.provided.scope}</scope>
            </dependency>
            
            <dependency>
                <groupId>org.jboss.shrinkwrap.resolver</groupId>
                <artifactId>shrinkwrap-resolver-bom</artifactId>
                <version>${my.shrinkwrap.resolver.version}</version>
                <scope>${my.project.dependency.import.scope}</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.jboss.shrinkwrap.descriptors</groupId>
                <artifactId>shrinkwrap-descriptors-bom</artifactId>
                <version>${my.shrinkwrap.descriptor.version}</version>
                <scope>${my.project.dependency.import.scope}</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${my.arquillian.version}</version>
                <scope>${my.project.dependency.import.scope}</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.eu.ingwar.tools</groupId>
                <artifactId>arquillian-suite-extension</artifactId>
                <version>${my.ingwar.suite.version}</version>
            </dependency>
            <!-- arquillian-suite-extension requires this -->
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${my.commons.lang.old.version}</version>
            </dependency>
    
            <dependency>
                <groupId>fish.payara.arquillian</groupId>
                <artifactId>arquillian-payara-micro-managed</artifactId>
                <version>${my.payara.arquillian.version}</version>
            </dependency>
            <dependency>
                <groupId>fish.payara.extras</groupId>
                <artifactId>payara-micro</artifactId>
                <version>${my.payara.version}</version>
            </dependency>
            <dependency>
                <groupId>net.javacrumbs.json-unit</groupId>
                <artifactId>json-unit</artifactId>
                <version>${my.json.unit.version}</version>
            </dependency>
            <dependency>
                <groupId>net.javacrumbs.json-unit</groupId>
                <artifactId>json-unit-fluent</artifactId>
                <version>${my.json.unit.version}</version>
            </dependency>
            <dependency>
                <groupId>com.toomuchcoding.jsonassert</groupId>
                <artifactId>jsonassert</artifactId>
                <version>${my.jsonassert.version}</version>
            </dependency>
            <dependency>
                <groupId>com.toomuchcoding.jsonassert</groupId>
                <artifactId>jsonassert-assertj-java8</artifactId>
                <version>${my.jsonassert.version}</version>
            </dependency>
            <!-- 
                Rest Mocking
                https://stackoverflow.com/questions/9223689 
            -->
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>${my.groovy.version}</version>
            </dependency>
            <dependency>
                <groupId>io.rest-assured</groupId>
                <artifactId>rest-assured</artifactId>
                <version>${my.rest.assured.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-xml</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-json</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.xebialabs.restito</groupId>
                <artifactId>restito</artifactId>
                <version>${my.restito.version}</version>
                <!-- 
                If using with Glassfish embeded or Payara embedded,
                the grizzly must be excluded.
                 -->
                <exclusions>
                    <exclusion>
                        <groupId>org.glassfish.grizzly</groupId>
                        <artifactId>grizzly-http-server</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>base-plugin-bom</id>
            <activation>
                <file>
                    <missing>src/test/resources/ignore-default-plugin.txt</missing>
                </file>
            </activation>
            <properties>
                <my.maven.clean.version>3.1.0</my.maven.clean.version>
                <my.maven.scm.version>1.11.1</my.maven.scm.version>
                <my.maven.compiler.version>3.8.1</my.maven.compiler.version>
                <my.maven.resources.version>3.1.0</my.maven.resources.version>
                <my.maven.surefire.version>2.22.1</my.maven.surefire.version>
                <my.maven.surefire.junit.version>2.22.2</my.maven.surefire.junit.version>
                <my.maven.failsafe.version>2.22.2</my.maven.failsafe.version>
                <my.maven.jar.version>3.2.0</my.maven.jar.version>
                <my.maven.war.version>3.3.1</my.maven.war.version>
                <my.maven.dependency.verion>3.1.2</my.maven.dependency.verion>
                <my.maven.deploy.version>2.8.2</my.maven.deploy.version>
                <my.maven.checkstyle.version>3.1.1</my.maven.checkstyle.version>
                <my.maven.pmd.version>3.13.0</my.maven.pmd.version>
                <my.spotbug.maven.version>4.0.1</my.spotbug.maven.version>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-clean-plugin</artifactId>
                            <version>${my.maven.clean.version}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-scm-plugin</artifactId>
                            <version>${my.maven.scm.version}</version>
                            <configuration>
                                <username>${git.userName}</username>
                                <password>${git.password}</password>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-compiler-plugin</artifactId>
                            <version>${my.maven.compiler.version}</version>
                            <configuration>
                                <source>${my.java.version}</source>
                                <target>${my.java.version}</target>
                                <encoding>${project.build.sourceEncoding}</encoding>
                                <showDeprecation>true</showDeprecation>
                                <compilerArgument>${my.maven.surefire.java.endorsed.dir}</compilerArgument>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-resources-plugin</artifactId>
                            <version>${my.maven.resources.version}</version>
                            <configuration>
                                <encoding>${project.build.sourceEncoding}</encoding>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <version>${my.maven.surefire.version}</version>
                            <dependencies>
                                <dependency>
                                    <groupId>org.apache.maven.surefire</groupId>
                                    <artifactId>surefire-junit47</artifactId>
                                    <version>${my.maven.surefire.junit.version}</version>
                                </dependency>
                            </dependencies>
                            <executions>
                                <execution>
                                    <id>unit-test</id>
                                    <goals>
                                        <goal>test</goal>
                                    </goals>
                                    <configuration>
                                        <encoding>${project.build.sourceEncoding}</encoding>
                                        <skipTests>${my.skipUTs}</skipTests>
                                        <includes>
                                            <include>
                                                **/*TestSuite*.java
                                            </include>
                                        </includes>
                                        <excludes>
                                            <exclude>
                                                **/*IntgrtnTestSuite*.java
                                            </exclude>
                                        </excludes>
                                        <excludedGroups>
                                            ${my.integration.test.category}
                                        </excludedGroups>
                                        <additionalClasspathElements>
                                            <additionalClasspathElement>
                                                ${basedir}/src/test/java
                                            </additionalClasspathElement>
                                        </additionalClasspathElements>
                                        <argLine>${my.maven.surefire.jvm.memory} ${my.maven.surefire.java.endorsed.dir}</argLine>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <version>${my.maven.failsafe.version}</version>
                            <dependencies>
                                <dependency>
                                    <groupId>org.apache.maven.surefire</groupId>
                                    <artifactId>surefire-junit47</artifactId>
                                    <version>${my.maven.surefire.junit.version}</version>
                                </dependency>
                            </dependencies>
                            <executions>
                                <execution>
                                    <id>integration-test</id>
                                    <goals>
                                        <goal>integration-test</goal>
                                        <goal>verify</goal>
                                    </goals>
                                </execution>
                            </executions>
                            <configuration>
                                <encoding>${project.build.sourceEncoding}</encoding>
                                <skipTests>${my.skipTests}</skipTests>
                                <skipITs>${my.skipITs}</skipITs>
                                <includes>
                                    <include>
                                        **/*IntgrtnTestSuite*.java
                                    </include>
                                </includes>
                                <groups>
                                    ${my.integration.test.category}
                                </groups>
                                <additionalClasspathElements>
                                    <additionalClasspathElement>
                                        ${basedir}/src/test/java
                                    </additionalClasspathElement>
                                </additionalClasspathElements>
                                <argLine>${my.maven.surefire.jvm.memory} ${my.maven.surefire.java.endorsed.dir}</argLine>
                            </configuration>
                        </plugin>                    
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-jar-plugin</artifactId>
                            <version>${my.maven.jar.version}</version>
                            <executions>
                                <execution>
                                    <id>test-jar-create</id>
                                    <phase>prepare-package</phase>
                                    <goals>
                                        <goal>test-jar</goal>
                                    </goals>
                                </execution>
                            </executions>
                            <configuration>
                                <archive>
                                    <manifest>
                                        <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                        <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                    </manifest>
                                    <manifestEntries>
                                        <Application-Name>${project.build.finalName}</Application-Name>
                                        <Application-Version>${project.version}</Application-Version>
                                    </manifestEntries>                                
                                </archive>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-war-plugin</artifactId>
                            <version>${my.maven.war.version}</version>
                            <configuration>
                                <failOnMissingWebXml>false</failOnMissingWebXml>
                                <attachClasses>false</attachClasses>
                                <archiveClasses>false</archiveClasses>
                                <archive>
                                    <manifest>
                                        <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                        <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                    </manifest>
                                    <manifestEntries>
                                        <Application-Name>${project.build.finalName}</Application-Name>
                                        <Application-Version>${project.version}</Application-Version>
                                    </manifestEntries>   
                                </archive>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-dependency-plugin</artifactId>
                            <version>${my.maven.dependency.verion}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-deploy-plugin</artifactId>
                            <version>${my.maven.deploy.version}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-checkstyle-plugin</artifactId>
                            <version>${my.maven.checkstyle.version}</version>
                            <configuration>
                                <suppressionsLocation>${basedir}/src/test/resources/customized-checkstyle.xml</suppressionsLocation>
                                <excludes>${my.project.quality.excludes}</excludes>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-pmd-plugin</artifactId>
                            <version>${my.maven.pmd.version}</version>
                            <configuration>
                                <linkXref>true</linkXref>
                                <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                                <minimumTokens>100</minimumTokens>
                                <targetJdk>${my.java.version}</targetJdk>
                                <excludes>
                                    <exclude>${my.project.quality.excludes}</exclude>
                                </excludes>
                                <excludeRoots>
                                    <excludeRoot>
                                        target/generated-sources/
                                    </excludeRoot>
                                </excludeRoots>
                                <aggregate>true</aggregate>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>com.github.spotbugs</groupId>
                            <artifactId>spotbugs-maven-plugin</artifactId>
                            <version>${my.spotbug.maven.version}</version>
                            <configuration>
                                <excludeFilterFile>${basedir}/src/test/resources/findbugs-exclude.xml</excludeFilterFile>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>base-dependency</id>
            <activation>
                <file>
                    <missing>src/test/resources/ignore-default.txt</missing>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.projectlombok</groupId>
                    <artifactId>lombok</artifactId>
                    <scope>${my.project.dependency.provided.scope}</scope>
                </dependency>
                <!-- Lombok requires -->
                <dependency>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-annotations</artifactId>
                    <scope>${my.project.dependency.provided.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl-over-slf4j</artifactId>
                    <scope>${my.project.dependency.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jul-to-slf4j</artifactId>
                    <scope>${my.project.dependency.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>log4j-over-slf4j</artifactId>
                    <scope>${my.project.dependency.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                    <scope>${my.project.dependency.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-ext</artifactId>
                    <scope>${my.project.dependency.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                    <scope>${my.project.dependency.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-core</artifactId>
                    <scope>${my.project.dependency.scope}</scope>
                </dependency>

                <dependency>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>org.mockito</groupId>
                    <artifactId>mockito-core</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>org.assertj</groupId>
                    <artifactId>assertj-core</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>com.github.stefanbirkner</groupId>
                    <artifactId>system-rules</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                    <exclusions>
                        <exclusion>
                            <groupId>junit</groupId>
                            <artifactId>junit-dep</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>microprofile</id>
            <activation>
                <file>
                    <exists>src/test/resources/microprofile.txt</exists>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>javax</groupId>
                    <artifactId>javaee-api</artifactId>
                    <scope>${my.project.dependency.provided.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.microprofile</groupId>
                    <artifactId>microprofile</artifactId>
                    <type>pom</type>
                    <scope>${my.project.dependency.provided.scope}</scope>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>jersey</id>
            <activation>
                <file>
                    <exists>src/test/resources/jersey.txt</exists>
                </file>
            </activation>
            <dependencies>
                <!-- Jeysey with MOXy -->
                <dependency>
                    <groupId>org.eclipse.persistence</groupId>
                    <artifactId>eclipselink</artifactId>
                    <scope>${my.project.dependency.provided.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.persistence</groupId>
                    <artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
                    <scope>${my.project.dependency.provided.scope}</scope>
                </dependency>
                <!-- Jersey -->
                <dependency>
                    <groupId>org.glassfish.jersey.containers</groupId>
                    <artifactId>jersey-container-servlet</artifactId>
                    <scope>${my.project.dependency.provided.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-moxy</artifactId>
                    <scope>${my.project.dependency.provided.scope}</scope>
                    <exclusions>
                        <exclusion>
                            <groupId>org.eclipse.persistence</groupId>
                            <artifactId>org.eclipse.persistence.moxy</artifactId>
                        </exclusion>
                        <exclusion>
                            <groupId>org.eclipse.persistence</groupId>
                            <artifactId>org.eclipse.persistence.antlr</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-multipart</artifactId>
                    <scope>${my.project.dependency.provided.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-sse </artifactId>
                    <scope>${my.project.dependency.provided.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.core</groupId>
                    <artifactId>jersey-client</artifactId>
                    <scope>${my.project.dependency.provided.scope}</scope>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>base-arquillian</id>
            <activation>
                <file>
                    <exists>src/test/resources/microprofile.txt</exists>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.shrinkwrap.resolver</groupId>
                    <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.shrinkwrap.descriptors</groupId>
                    <artifactId>shrinkwrap-descriptors-impl-javaee</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.arquillian.junit</groupId>
                    <artifactId>arquillian-junit-container</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>org.eu.ingwar.tools</groupId>
                    <artifactId>arquillian-suite-extension</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
                <!-- arquillian-suite-extension requires this -->
                <dependency>
                    <groupId>commons-lang</groupId>
                    <artifactId>commons-lang</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>payara-micro</id>
            <activation>
                <property>
                    <name>payara-micro</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <my.payara.location>${project.build.directory}</my.payara.location>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-payara-micro</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>fish.payara.extras</groupId>
                                            <artifactId>payara-micro</artifactId>
                                            <version>${my.payara.version}</version>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${my.payara.location}</outputDirectory>
                                            <destFileName>payara-micro-${my.payara.version}.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-test-dependencies</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <includeScope>test</includeScope>
                                    <outputDirectory>${project.build.directory}/libs</outputDirectory>
                                    <overWriteReleases>false</overWriteReleases>
                                    <overWriteSnapshots>false</overWriteSnapshots>
                                    <overWriteIfNewer>true</overWriteIfNewer>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <inherited>true</inherited>
                        <configuration>
                            <argLine>${my.maven.surefire.jvm.memory} ${my.maven.surefire.java.endorsed.dir}</argLine>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>arquillian-payara-micro-managed</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <!-- 
            These dependencies have many transitive dependencies which may
            conflict with other, then make them as a last profile to ensure
            that all those transitive dependencies must not cause any problem.
             -->
            <id>base-dependency-supplementary</id>
            <activation>
                <file>
                    <missing>src/test/resources/ignore-supplementary.txt</missing>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-all</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>net.javacrumbs.json-unit</groupId>
                    <artifactId>json-unit</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>net.javacrumbs.json-unit</groupId>
                    <artifactId>json-unit-fluent</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>com.toomuchcoding.jsonassert</groupId>
                    <artifactId>jsonassert</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>com.toomuchcoding.jsonassert</groupId>
                    <artifactId>jsonassert-assertj-java8</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>io.rest-assured</groupId>
                    <artifactId>rest-assured</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
                <dependency>
                    <groupId>com.xebialabs.restito</groupId>
                    <artifactId>restito</artifactId>
                    <scope>${my.project.dependency.test.scope}</scope>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>only-eclipse</id>
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>1.0.0</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>
                                                    org.apache.maven.plugins
                                                </groupId>
                                                <artifactId>
                                                    maven-dependency-plugin
                                                </artifactId>
                                                <versionRange>
                                                    [3.1.1,)
                                                </versionRange>
                                                <goals>
                                                    <goal>unpack</goal>
                                                    <goal>copy</goal>
                                                    <goal>copy-dependencies</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <execute/>
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
	<modules>
		<module>payara-evaluation-base</module>
		<module>payara-evaluation-openapi</module>
		<module>payara-evaluation-fault-tolerance</module>
		<module>payara-evaluation-config</module>
		<module>payara-evaluation-docker</module>
	</modules>
</project>